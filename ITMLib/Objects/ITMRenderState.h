// Copyright 2014-2015 Isis Innovation Limited and the authors of InfiniTAM

#pragma once


#include <stdlib.h>

#include "ITMLibDefines.h"
#include "ITMCUDAUtils.h"
#include "Image.h"

namespace ITMLib
{
	namespace Objects
	{
		/** \brief
			Stores the render state used by the Visualisation engine.
			*/
		class ITMRenderState
        {
		public:

			/** the 3D intersection locations generated by the latest raycast
            in voxel-fractional-world-coordinates!

            World-coordinate version of this is stored in trackingState->pointCloud->locations
			*/
			ORUtils::Image<Vector4f> *raycastResult;

            ITMRenderState(const Vector2i &imgSize) 
			{
                raycastResult = new ORUtils::Image<Vector4f>(imgSize, MEMORYDEVICE_CUDA);
			}

			virtual ~ITMRenderState()
			{
				delete raycastResult;
			}
		};
	}
}
